"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

require("./style.css");

var variables = {
  'duration': '--duration-effect',
  'iterationCount': '--iteration-count'
};

var GlitchEffect =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(GlitchEffect, _React$Component);

  function GlitchEffect() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, GlitchEffect);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(GlitchEffect)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "initVariables", function () {
      Object.entries(_this.props).forEach(function (_ref) {
        var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
            key = _ref2[0],
            value = _ref2[1];

        if (!!variables[key]) {
          _this.setGlitchVariable(variables[key], value);
        }
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "setGlitchVariable", function (key, value) {
      _this.refGlitch.style.setProperty(key, value);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "toggleGlitchEffect", function () {
      _this.refGlitch.classList.toggle('glitch');
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "handleHover", function () {
      if (!!_this.props.onHover) {
        _this.toggleGlitchEffect();
      }
    });
    return _this;
  }

  (0, _createClass2.default)(GlitchEffect, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.initVariables();

      if (!this.props.onHover && !this.props.disabled) {
        this.toggleGlitchEffect();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (this.props.disabled !== prevProps.disabled) {
        this.toggleGlitchEffect();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          _this$props$className = _this$props.className,
          className = _this$props$className === void 0 ? null : _this$props$className,
          _this$props$style = _this$props.style,
          style = _this$props$style === void 0 ? null : _this$props$style;
      return _react.default.createElement("div", {
        className: className,
        onMouseEnter: this.handleHover,
        onMouseLeave: this.handleHover,
        style: style
      }, _react.default.createElement("div", {
        className: "glitch-variables",
        ref: function ref(refGlitch) {
          return _this2.refGlitch = refGlitch;
        }
      }, this.props.children));
    }
  }]);
  return GlitchEffect;
}(_react.default.Component);

var _default = GlitchEffect;
exports.default = _default;
GlitchEffect.propTypes = {
  children: _propTypes.default.node.isRequired,
  className: _propTypes.default.string,
  disabled: _propTypes.default.bool,
  duration: _propTypes.default.string,
  iterationCount: _propTypes.default.string,
  onHover: _propTypes.default.bool,
  style: _propTypes.default.object
};